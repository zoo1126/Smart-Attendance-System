# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'staff_message_management.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QValidator,QRegExpValidator,QDoubleValidator
from PyQt5.QtCore import QRegExp
from sql.staff_sql import *
from sql.company import *
from entity.staff_entity import *
from codes.staff_op import *
from sql.department import *
from PyQt5.QtWidgets import QMessageBox

class Ui_Form(object):
    def setupUi(self, Form):

        Form.setObjectName("Form")
        Form.resize(948, 612)
        self.gridLayout_3 = QtWidgets.QGridLayout(Form)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setContentsMargins(-1, 0, -1, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setContentsMargins(10, 0, 10, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget_2 = QtWidgets.QWidget(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.widget_2.setFont(font)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("QPushButton{\n"
"    background-color:orange;\n"
"    color:white;\n"
"    border-radius:8px;\n"
"    border:2px groove gray;\n"
"    border-style:outset;\n"
"}")
        self.pushButton_2.setCheckable(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout.addWidget(self.pushButton_2, 3, 8, 1, 1)
        self.pushButton_2.clicked.connect(self.resetSelection)
        self.label_5 = QtWidgets.QLabel(self.widget_2)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 3, 5, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.widget_2)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton{\n"
"    background-color:green;\n"
"    color:white;\n"
"    border-radius:8px;\n"
"    border:2px groove gray;\n"
"    border-style:outset;\n"
"}")
        self.pushButton.setCheckable(True)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 3, 7, 1, 1)
        self.pushButton.clicked.connect(self.searchbutton)
        self.lineEdit = QtWidgets.QLineEdit(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("QLineEdit{\n"
"    border-radius:5px;\n"
"    border:1px groove gray;    \n"
"    border-style:outset;\n"
"}")
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 3, 4, 1, 1)
        reg=QRegExp('[1][35678][0-9]{9}$')
        vali=QRegExpValidator(self)
        vali.setRegExp(reg)
        self.lineEdit.setValidator(vali)

        self.label = QtWidgets.QLabel(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 3, 3, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.widget_2)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.gridLayout.addWidget(self.comboBox, 3, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.widget_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 3, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_3.setStyleSheet("QLineEdit{\n"
"    border-radius:5px;\n"
"    border:1px groove gray;    \n"
"    border-style:outset;\n"
"}")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout.addWidget(self.lineEdit_3, 3, 6, 1, 1)
        self.verticalLayout.addWidget(self.widget_2)
        self.tableWidget = QtWidgets.QTableWidget(self.widget)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(10)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(9, item)
        self.verticalLayout.addWidget(self.tableWidget)
        self.gridLayout_2.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.horizontalLayout.addWidget(self.widget)
        self.gridLayout_3.addLayout(self.horizontalLayout, 0, 0, 1, 1)


        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton_2.setText(_translate("Form", "重置"))
        self.label_5.setText(_translate("Form", "姓名"))
        self.pushButton.setText(_translate("Form", "搜索"))
        self.label.setText(_translate("Form", "手机号码"))
        self.comboBox.setItemText(0, _translate("Form", "全部"))
        self.label_2.setText(_translate("Form", "部门"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "操作"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "手机号"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "姓名"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Form", "住址"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Form", "邮箱"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Form", "工号"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Form", "部门编号"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("Form", "职位"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("Form", "薪水"))
        item = self.tableWidget.horizontalHeaderItem(9)
        item.setText(_translate("Form", "性别"))



    def sethr_phone(self, hr_phone):
        self.hr_phone = hr_phone
        self.getAlldepart()

    def gethr_phone(self):
        return self.hr_phone

    def sethr_id(self, hr_id):
        self.hr_id = hr_id

    def gethr_id(self):
        return self.hr_id

    def getcom_id(self):
        return findCom_idbyhr_id(self.hr_phone)[0][0]

    def getAlldepart(self):
        dep_list=findDeps(self.getcom_id())
        list=[]
        for i in dep_list:
            list.append(i[2])
        for j in range(len(list)):
            self.comboBox.addItem(list[j])





    def gettablewidget(self):
        return self.tableWidget

    def showAllStaff_table(self):
        com_id = self.getcom_id()
        print(com_id)

        dep_list = allStaffFind(com_id)
        self.tableWidget.setRowCount(len(dep_list))
        print(len(dep_list))
        x = 0
        for onedep in dep_list:
            j=0
            for y in range(len(onedep)):
                if y!=1 and y!=7 and y!=10:
                    self.tableWidget.setCellWidget(x, 0, self.buttonForRow(True))
                    if onedep[y] is not None:
                        item=QtWidgets.QTableWidgetItem(str(onedep[y]))
                    else:
                        item = QtWidgets.QTableWidgetItem(None)
                    item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                    self.tableWidget.setItem(x, j + 1, item)
                    j=j+1
                if y==10:
                    if onedep[y] is not None:
                        if onedep[y]==0:
                            sex='女'
                        else:
                            sex="男"
                        item=QtWidgets.QTableWidgetItem(sex)
                    else:
                        item = QtWidgets.QTableWidgetItem(None)
                    item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                    self.tableWidget.setItem(x, j + 1, item)
                    j=j+1
            x = x + 1

    def showselectRow(self,row,phone):
        com_id = self.getcom_id()
        print(com_id)

        staffrow = staffFindbyPhone(phone,com_id)

        for staffone in staffrow:
            j = 0
            for y in range(len(staffrow)):
                if y != 1 and y != 7 and y!=10:
                    self.tableWidget.setCellWidget(row, 0, self.buttonForRow(True))
                    if staffone[y] is not None:

                        item = QtWidgets.QTableWidgetItem(str(staffone[y]))
                        self.tableWidget.setItem(row, j + 1, item)

                    else:
                        item = QtWidgets.QTableWidgetItem(None)
                        self.tableWidget.setItem(row, j + 1, item)
                    item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)

                    j = j + 1
                if y == 10:
                    if staffone[y] is not None:
                        if staffone[y] == 0:
                            sex = '女'
                        else:
                            sex = "男"
                        item = QtWidgets.QTableWidgetItem(sex)
                    j = j + 1


    def showselecttable(self,dep_list):
        com_id = self.getcom_id()
        print(com_id)
        self.tableWidget.setRowCount(len(dep_list))
        print(len(dep_list))
        x = 0
        for onedep in dep_list:
            j = 0
            for y in range(len(onedep)):
                if y != 1 and y != 7 and y!=10:
                    self.tableWidget.setCellWidget(x, 0, self.buttonForRow(True))
                    if onedep[y] is not None:
                        item=QtWidgets.QTableWidgetItem(str(onedep[y]))
                    else:
                        item = QtWidgets.QTableWidgetItem(None)
                    item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                    self.tableWidget.setItem(x, j + 1, item)
                    j = j + 1
                if y==10:
                    if onedep[y] is not None:
                        if onedep[y]==0:
                            sex='女'
                        else:
                            sex="男"
                        item=QtWidgets.QTableWidgetItem(sex)
                    else:
                        item = QtWidgets.QTableWidgetItem(None)
                    item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                    self.tableWidget.setItem(x, j + 1, item)
                    j=j+1
            x = x + 1

    def buttonForRow(self, issaved):

        widget = QtWidgets.QWidget()
        hLayout = QtWidgets.QHBoxLayout()
        # 修改
        if issaved==True:
            self.updateBtn = QtWidgets.QPushButton('编辑')
            self.updateBtn.setStyleSheet(''' text-align : center;
                                                  background-color : NavajoWhite;
                                                  height : 30px;
                                                  border-style: outset;
                                                  font : 13px  ''')
            self.updateBtn.clicked.connect(self.UpdateButton)
            # 删除
            self.deleteBtn = QtWidgets.QPushButton('移除')
            self.deleteBtn.setStyleSheet(''' text-align : center;
                                            background-color : LightCoral;
                                            height : 30px;
                                            border-style: outset;
                                            font : 13px; ''')

            self.deleteBtn.clicked.connect(self.DeleteButton)
            hLayout.addWidget(self.updateBtn)
            hLayout.addWidget(self.deleteBtn)
            hLayout.setContentsMargins(5, 2, 5, 2)
        else:
            self.saveBtn = QtWidgets.QPushButton('保存')
            self.saveBtn.setStyleSheet(''' text-align : center;
                                                                background-color : NavajoWhite;
                                                                height : 30px;
                                                                border-style: outset;
                                                                font : 13px; ''')

            self.saveBtn.clicked.connect(self.SaveButton)
            self.cancelBtn = QtWidgets.QPushButton('取消')
            self.cancelBtn.setStyleSheet(''' text-align : center;
                                                                            background-color : LightCoral;
                                                                            height : 30px;
                                                                            border-style: outset;
                                                                            font : 13px; ''')

            self.cancelBtn.clicked.connect(self.CancelButton)
            hLayout.addWidget(self.saveBtn)
            hLayout.addWidget(self.cancelBtn)
            hLayout.setContentsMargins(5, 2, 5, 2)

        widget.setLayout(hLayout)
        return widget


    def removeRow(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            self.tableWidget.removeRow(row)


    def DeleteButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            res = QMessageBox.question(self, '移除', '确定移除该条员工信息记录吗？', QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
            if res == QMessageBox.No:
                return
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            dep_id = self.tableWidget.item(row, 1)
            dep_id_txt = dep_id.text()
            res = deletestaff(self.tableWidget.item(row,1).text())
            print(res)
            if res:
                self.tableWidget.removeRow(row)
            else:
                print("error delete")

    def UpdateButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            # self.tableWidget.removeRow(row)
            #只有6 7 9 10列能改
            self.tableWidget.setCellWidget(row, 0, self.buttonForRow(False))
            self.oldrow = staff()
            self.oldrow.setPhone(self.tableWidget.item(row, 1).text())
            self.oldrow.setName(self.tableWidget.item(row, 2).text())
            self.oldrow.setAddr(self.tableWidget.item(row, 3).text())
            self.oldrow.setComid(self.getcom_id())
            self.oldrow.setEmail(self.tableWidget.item(row, 4).text())
            self.oldrow.setId(self.tableWidget.item(row, 5).text())
            self.oldrow.setDepartid(self.tableWidget.item(row, 6).text())
            self.oldrow.setPosition(self.tableWidget.item(row, 7).text())
            self.oldrow.setSalary(self.tableWidget.item(row, 8).text())
            self.oldrow.setSex(self.tableWidget.item(row, 9).text())

            for i in range(10):
                if i==6:
                    self.tableWidget.setCellWidget(row,6,self.depselection(self.tableWidget.item(row, 6).text()))
                elif  i==5 or i==7 :
                    item = self.tableWidget.item(row, i)
                    item.setFlags(QtCore.Qt.ItemFlag(63))
                elif i==8:
                    self.tableWidget.setCellWidget(row,8,self.salaryedit(self.oldrow.getSalary()))

    def depselection(self,depid):
        if depid is None or len(depid)==0:
            all_dep_list=findDeps(self.getcom_id())
            depsel=QtWidgets.QComboBox()
            for onedep in all_dep_list:
                depsel.addItem(str(onedep[0])+"-"+onedep[2])
            depsel.setCurrentIndex(0)
        else:
            print(depid)
            all_dep_list = findDeps(self.getcom_id())
            depsel = QtWidgets.QComboBox()
            index=0
            i=0
            for onedep in all_dep_list:
                if str(onedep[0])==depid:
                    index=i
                depsel.addItem(str(onedep[0])+"-"+onedep[2])
                i=i+1
            depsel.setCurrentIndex(index)

        return depsel

    def salaryedit(self,oldsal):

        salaryEdit=QtWidgets.QLineEdit()
        salaryEdit.setText(oldsal)
        reg=QRegExp('[1-9][0-9]{0,5}[\.][0-9]{0,2}')
        salaryvali=QRegExpValidator(reg)
        salaryEdit.setValidator(salaryvali)
        return salaryEdit

    def SaveButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            # self.tableWidget.removeRow(row)
            print(row)

            self.newrow = staff()
            self.newrow.setPhone(self.tableWidget.item(row, 1).text())
            self.newrow.setName(self.tableWidget.item(row, 2).text())
            self.newrow.setAddr(self.tableWidget.item(row, 3).text())
            self.newrow.setComid(self.getcom_id())
            self.newrow.setEmail(self.tableWidget.item(row, 4).text())
            self.newrow.setId(self.tableWidget.item(row, 5).text())
            depcombo=self.tableWidget.cellWidget(row,6)
            depid_name=depcombo.currentText().split('-')
            print(depid_name)
            salaryedit=self.tableWidget.cellWidget(row,8)
            salary=salaryedit.text()
            if  salary is  None or len(salary)==0:
                salary='0'
            elif salary is not None and len(salary)!=0 and salary.endswith('.'):
                salary=salary.strip('.')

            self.newrow.setDepartid(depid_name[0])
            self.newrow.setPosition(self.tableWidget.item(row, 7).text())
            self.newrow.setSalary(salary)
            self.newrow.setSex(self.tableWidget.item(row, 9).text())
            self.tableWidget.removeCellWidget(row, 6)
            self.tableWidget.removeCellWidget(row,8)
            res=updateStaff(self.oldrow, self.newrow)
            if res:
                self.showselectRow(row, self.newrow.getPhone())
                self.tableWidget.item(row,6).setText(self.newrow.getDepartid())
                self.tableWidget.item(row,8).setText(self.newrow.getSalary())
            else:
                self.showselectRow(row,self.oldrow.getPhone())
                QMessageBox.warning(self,'失败','员工信息维护失败！',QMessageBox.Yes)


    def CancelButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            self.showselectRow(row, self.oldrow.getPhone())
            self.tableWidget.removeCellWidget(row,6)
            self.tableWidget.removeCellWidget(row,8)

    def resetSelection(self):
        self.lineEdit.clear()
        self.lineEdit_3.clear()
        self.comboBox.setCurrentIndex(0)

    def searchbutton(self):
        combo=self.comboBox.currentText()
        phone=self.lineEdit.text()
        name=self.lineEdit_3.text()
        comflag=phflag=nameflag=True
        if phone is None or len(phone)==0:
            phflag=False
        if name is None or len(name)==0:
            nameflag=False
        if self.comboBox.currentIndex()==0:
            comflag=False
        if comflag and phflag and nameflag:
            self.showselecttable(staffFindbyallselect(phone, combo, name, self.getcom_id()))
        elif comflag and not phflag and nameflag:
            self.showselecttable(staffFindbyDepandName(combo, name, self.getcom_id()))
        elif comflag and phflag and not nameflag:
            self.showselecttable(staffFindbyPhoneandDep(phone,combo,self.getcom_id()))
        elif not comflag and phflag and nameflag:
            self.showselecttable(staffFindbyPhoneandName(phone,name,self.getcom_id()))
        elif comflag and not phflag and not nameflag:
            if combo!="全部":
                self.showselecttable(staffFindbyDep(combo,self.getcom_id()))
            else:
                self.showAllStaff_table()
        elif not comflag and phflag and not nameflag:
            self.showselecttable(staffFindbyPhone(phone, self.getcom_id()))
        elif not comflag and not phflag and nameflag:
            self.showselecttable(staffFindbyName(name,self.getcom_id()))
        else:
            self.showAllStaff_table()


