# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'department.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from sql.department import *
from sql.company import *
from codes.depment_op import *
from entity.department_entity import *
import datetime
from PyQt5.QtWidgets import QMessageBox


class Ui_Form(object):
    hr_phone=None
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(826, 574)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label = QtWidgets.QLabel(self.widget)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 7, 1, 1)
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setStyleSheet("QLineEdit{\n"
"    border-radius:5px;\n"
"    border:1px groove gray;    \n"
"    border-style:outset;\n"
"}")
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout_2.addWidget(self.lineEdit, 0, 8, 1, 1)
        self.lineEdit.setPlaceholderText("输入部门名称或部门编号")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem, 0, 6, 1, 1)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setStyleSheet("QPushButton{\n"
"    background-color:green;\n"
"    color:white;\n"
"    border-radius:5px;\n"
"    border:2px groove gray;\n"
"    border-style:outset;\n"
"}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 0, 9, 1, 1)
        self.pushButton_2.clicked.connect(self.showSelectedDepart_table)
        self.line_3 = QtWidgets.QFrame(self.widget)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout_2.addWidget(self.line_3, 0, 2, 1, 1)
        self.line = QtWidgets.QFrame(self.widget)
        self.line.setLineWidth(5)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_2.addWidget(self.line, 0, 6, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.clicked.connect(self.insertNewDepart)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.pushButton.setFont(font)
        self.pushButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton.setStyleSheet("QPushButton{\n"
"    background-color:FireBrick;\n"
"    color:white;\n"
"    border-radius:5px;\n"
"    border:2px groove gray;\n"
"    border-style:outset;\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 0, 1, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.widget)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_2.addWidget(self.line_2, 0, 0, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.clicked.connect(self.showAlldepart_table)
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(10)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton_3.setStyleSheet("QPushButton{\n"
                                      "    background-color:RoyalBlue;\n"
                                      "    color:white;\n"
                                      "    border-radius:5px;\n"
                                      "    border:2px groove gray;\n"
                                      "    border-style:outset;\n"
                                      "}")
        self.pushButton_3.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton_3, 0, 4, 1, 1)

        self.verticalLayout.addWidget(self.widget, 0, QtCore.Qt.AlignLeft)
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setAccessibleName("tablewidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.verticalLayout.addWidget(self.tableWidget)
        #self.tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.widget_3 = QtWidgets.QWidget(Form)
        self.widget_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.widget_3.setObjectName("widget_3")

        self.verticalLayout.addWidget(self.widget_3)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "部门名称/id"))
        self.pushButton_2.setText(_translate("Form", "搜索"))
        self.pushButton.setText(_translate("Form", "创建部门"))
        self.pushButton_3.setText(_translate("Form", "显示全部部门"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "操作"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "部门编号"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "企业统一信用号"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Form", "部门名称"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Form", "上班时间"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Form", "下班时间"))





    def sethr_phone(self,hr_phone):
        self.hr_phone=hr_phone

    def gethr_phone(self):
        return self.hr_phone

    def getcom_id(self):
        return findCom_idbyhr_id(self.hr_phone)[0][0]




    def gettablewidget(self):
        return self.tableWidget

    def showAlldepart_table(self):
        com_id=self.getcom_id()
        dep_list = findDeps(com_id)
        self.tableWidget.setRowCount(len(dep_list))
        x = 0
        for onedep in dep_list:
            self.tableWidget.setCellWidget(x, 0, self.buttonForRow(True))
            for y in range(len(onedep)):

                item=QtWidgets.QTableWidgetItem(str(onedep[y]))
                item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                self.tableWidget.setItem(x, y + 1, item)
            x = x + 1

    def timeedit(self,time):

        t=time.split(':')

        hour=int(t[0])
        minute=int(t[1])
        second=int(t[2])
        self.timeet=QtWidgets.QTimeEdit()
        self.timeet.setDisplayFormat('HH:mm:ss')
        self.timeet.setVisible(True)
        self.timeet.setTime(QtCore.QTime(hour,minute,second))
        self.timeet.setMinimumTime(QtCore.QTime(0,0,0))
        self.timeet.setMaximumTime(QtCore.QTime(23,59,59))
        return self.timeet

    def buttonForRow(self, issaved):

        widget = QtWidgets.QWidget()
        hLayout = QtWidgets.QHBoxLayout()
        # 修改
        if issaved==True:
            self.updateBtn = QtWidgets.QPushButton('编辑')
            self.updateBtn.setStyleSheet(''' text-align : center;
                                                  background-color : NavajoWhite;
                                                  height : 30px;
                                                  border-style: outset;
                                                  font : 13px  ''')
            self.updateBtn.clicked.connect(self.UpdateButton)
            # 删除
            self.deleteBtn = QtWidgets.QPushButton('移除')
            self.deleteBtn.setStyleSheet(''' text-align : center;
                                            background-color : LightCoral;
                                            height : 30px;
                                            border-style: outset;
                                            font : 13px; ''')

            self.deleteBtn.clicked.connect(self.DeleteButton)
            hLayout.addWidget(self.updateBtn)
            hLayout.addWidget(self.deleteBtn)
            hLayout.setContentsMargins(5, 2, 5, 2)
        else:
            self.saveBtn = QtWidgets.QPushButton('保存')
            self.saveBtn.setStyleSheet(''' text-align : center;
                                                    background-color : NavajoWhite;
                                                    height : 30px;
                                                    border-style: outset;
                                                    font : 13px; ''')

            self.saveBtn.clicked.connect(self.SaveButton)
            self.cancelBtn = QtWidgets.QPushButton('取消')
            self.cancelBtn.setStyleSheet(''' text-align : center;
                                                                background-color : LightCoral;
                                                                height : 30px;
                                                                border-style: outset;
                                                                font : 13px; ''')

            self.cancelBtn.clicked.connect(self.CancelButton)
            hLayout.addWidget(self.saveBtn)
            hLayout.addWidget(self.cancelBtn)
            hLayout.setContentsMargins(5, 2, 5, 2)


        widget.setLayout(hLayout)
        return widget

    def buttonForInsert(self):

        widget = QtWidgets.QWidget()
        hLayout = QtWidgets.QHBoxLayout()
        # 修改

        self.insertBtn = QtWidgets.QPushButton('插入')
        self.insertBtn.setStyleSheet(''' text-align : center;
                                              background-color : NavajoWhite;
                                              height : 30px;
                                              border-style: outset;
                                              font : 13px  ''')
        self.insertBtn.clicked.connect(self.InsertButton)
        self.deleteBtn = QtWidgets.QPushButton('移除')
        self.deleteBtn.setStyleSheet(''' text-align : center;
                                                    background-color : LightCoral;
                                                    height : 30px;
                                                    border-style: outset;
                                                    font : 13px; ''')

        self.deleteBtn.clicked.connect(self.removeRow)
        hLayout.addWidget(self.insertBtn)
        hLayout.addWidget(self.deleteBtn)
        hLayout.setContentsMargins(5, 2, 5, 2)

        widget.setLayout(hLayout)
        return widget

    def InsertButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            if self.tableWidget.item(row,3).text() is not None and len(self.tableWidget.item(row,3).text())!=0:
                newbeginedit = self.tableWidget.cellWidget(row, 4)
                newbegin = newbeginedit.time().toString('HH:mm:ss')
                newendedit = self.tableWidget.cellWidget(row, 5)
                newend = newendedit.time().toString('HH:mm:ss')

                self.newrow = department()
                self.newrow.setCom_id(self.tableWidget.item(row, 2).text())
                self.newrow.setDep_name(self.tableWidget.item(row, 3).text())
                self.newrow.setStarttime(newbegin)
                self.newrow.setEndtime(newend)
                self.tableWidget.removeCellWidget(row,4)
                self.tableWidget.removeCellWidget(row, 5)
                res=createDep(self.newrow.getCom_id(), self.newrow.getDep_name(), self.newrow.getStarttime(), self.newrow.getEndtime())
                if res :
                    self.showAlldepart_table()

                else:
                    print("error insert")
            else:
                QMessageBox.warning(self, "警告", "部门名称不能为空", QMessageBox.Yes)

    def removeRow(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键

            row = self.tableWidget.indexAt(button.parent().pos()).row()
            self.tableWidget.removeRow(row)


    def DeleteButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            res=QMessageBox.question(self, '移除', '确定移除该条记录吗？', QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
            if res==QMessageBox.No:
                return
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            dep_id = self.tableWidget.item(row, 1)
            dep_id_txt = dep_id.text()

            res = deleteDepartment(dep_id_txt)
            print(res)
            if res:
                self.tableWidget.removeRow(row)
            else:
                print("error delete")

    def UpdateButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            # self.tableWidget.removeRow(row)
            print(row)

            self.tableWidget.setCellWidget(row, 0, self.buttonForRow(False))
            self.tableWidget.setCellWidget(row,4,self.timeedit(self.tableWidget.item(row, 4).text()))
            self.tableWidget.setCellWidget(row, 5, self.timeedit(self.tableWidget.item(row, 5).text()))
            self.oldrow = department()
            self.oldrow.setDep_id(self.tableWidget.item(row, 1).text())
            self.oldrow.setCom_id(self.tableWidget.item(row, 2).text())
            self.oldrow.setDep_name(self.tableWidget.item(row, 3).text())

            self.oldrow.setStarttime(self.tableWidget.item(row, 4).text())
            self.oldrow.setEndtime(self.tableWidget.item(row, 5).text())
            print(self.oldrow.getDep_id())

            for i in range(3):
                item = self.tableWidget.item(row, i + 3)
                item.setFlags(QtCore.Qt.ItemFlag(63))

    def SaveButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            if self.tableWidget.item(row, 3).text() is not None and len(self.tableWidget.item(row, 3).text()) != 0:

                # self.tableWidget.removeRow(row)
                print(row)
                newbeginedit=self.tableWidget.cellWidget(row, 4)
                newbegin=newbeginedit.time().toString('HH:mm:ss')
                newendedit = self.tableWidget.cellWidget(row, 5)
                newend = newendedit.time().toString('HH:mm:ss')
                self.newrow = department()
                self.newrow.setDep_id(self.tableWidget.item(row, 1).text())
                self.newrow.setCom_id(self.tableWidget.item(row, 2).text())
                self.newrow.setDep_name(self.tableWidget.item(row, 3).text())
                self.newrow.setStarttime(newbegin)
                self.newrow.setEndtime(newend)
                print(self.newrow.getDep_id())
                res=updateDepartment(self.oldrow, self.newrow)
                if res:
                    self.tableWidget.setCellWidget(row, 0, self.buttonForRow(True))
                    onedep=findDepbyId(self.newrow.getDep_id(), self.getcom_id())
                    for y in range(len(onedep)):
                        item = QtWidgets.QTableWidgetItem(str(onedep[y]))
                        item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                        self.tableWidget.setItem(row, y + 1, item)
                    self.tableWidget.removeCellWidget(row,4)
                    self.tableWidget.removeCellWidget(row,5)
                else:
                    QMessageBox.warning(self, "失败", "部门更新失败！", QMessageBox.Yes)
            else:
                QMessageBox.warning(self, "警告", "部门名称不能为空", QMessageBox.Yes)

    def CancelButton(self):
        button = self.sender()
        if button:
            # 确定位置的时候这里是关键
            row = self.tableWidget.indexAt(button.parent().pos()).row()
            self.tableWidget.setCellWidget(row, 0, self.buttonForRow(True))
            onedep = findDepbyId(self.oldrow.getDep_id(), self.getcom_id())
            for y in range(len(onedep)):
                item = QtWidgets.QTableWidgetItem(str(onedep[y]))
                item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                self.tableWidget.setItem(row, y + 1, item)
            self.tableWidget.removeCellWidget(row, 4)
            self.tableWidget.removeCellWidget(row, 5)


    def showSelectedDepart_table(self):
        depart_txt = self.lineEdit.text()
        com_id=self.getcom_id()
        dep_list=findDepartment(depart_txt,com_id)
        if dep_list is None or len(dep_list)==0:
            print('dep_list is None')
            self.tableWidget.clearContents()
            self.tableWidget.setRowCount(0)
            return None
        else:
            self.tableWidget.clearContents()
            trys=dep_list[0]
            print(str(type(trys)))
            if str(type(trys)) != "<class 'tuple'>":
                self.tableWidget.setRowCount(1)
                self.tableWidget.setCellWidget(0, 0, self.buttonForRow(True))
                for y in range(len(dep_list)):
                    self.tableWidget.setItem(0, y + 1, QtWidgets.QTableWidgetItem(str(dep_list[y])))
            else:
                self.tableWidget.setRowCount(len(dep_list))
                x = 0

                for onedep in dep_list:
                    self.tableWidget.setCellWidget(x, 0, self.buttonForRow(True))
                    for y in range(len(onedep)):
                        self.tableWidget.setItem(x, y + 1, QtWidgets.QTableWidgetItem(str(onedep[y])))
                    x = x + 1

    def insertNewDepart(self):
        rowPosition=self.tableWidget.rowCount()
        self.tableWidget.insertRow(rowPosition)
        self.tableWidget.setCellWidget(rowPosition, 0, self.buttonForInsert())
        item = QtWidgets.QTableWidgetItem('自增序号')
        item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(rowPosition, 1, item)
        item = QtWidgets.QTableWidgetItem(self.getcom_id())
        item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
        self.tableWidget.setItem(rowPosition, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemFlag(63))
        self.tableWidget.setItem(rowPosition, 3, item)

        self.tableWidget.setCellWidget(rowPosition, 4, self.timeedit('8:00:00'))

        self.tableWidget.setCellWidget(rowPosition, 5, self.timeedit('16:00:00'))





